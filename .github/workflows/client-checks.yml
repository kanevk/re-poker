name: Frontend tests & lint

on:
  push:
    branches: [ master ]
    paths:
      - 'client/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'client/**'

defaults:
  run:
    working-directory: client

jobs:
  specs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - run: echo '${{ steps.yarn-cache-dir-path.outputs.dir }}'
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - name: Run tests
        run: yarn test --passWithNoTests

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - run: echo '${{ steps.yarn-cache-dir-path.outputs.dir }}'
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - name: Run ESlint
        run: yarn run eslint .
