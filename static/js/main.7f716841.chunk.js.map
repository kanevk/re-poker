{"version":3,"sources":["components/LoginPage/index.module.scss","../node_modules/graphql-ruby-client/dist/sync sync","serviceWorker.js","Graphql.js","components/LobbyPage/index.js","components/TalkJS/index.js","components/RoomPage/TurnMenu.js","components/RoomPage/utils.js","components/RoomPage/proptypes.js","components/RoomPage/Seat.js","components/RoomPage/index.js","components/LoginPage/index.js","components/App/index.js","apolloClient.js","index.js","components/RoomPage/index.module.scss"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Boolean","window","location","hostname","match","SIGNIN_USER_MUTATON","gql","GET_CURRENT_USER_QUERY","GET_ROOMS_QUERY","FULL_PLAYER_FRAGMENT","GET_ROOM_SUBSCRIPTION","MAKE_MOVE_MUTATION","LobbyPage","useQuery","data","rooms","loading","error","map","room","key","to","name","TalkContext","createContext","Chatbox","React","memo","chatId","users","fixedPosition","chatWrapperRef","useRef","inboxElem","conversationSettings","photoUrl","subject","useContext","session","currentChatUser","console","log","useMemo","chatUsers","u","Talk","User","conversation","getOrCreateConversation","forEach","setParticipant","setAttributes","createChatbox","useChatbox","useEffect","mount","current","destroy","style","bottomLeft","position","bottom","left","height","ref","prevChatId","prevUsers","prevFixedPosition","JSON","stringify","TalkProvider","children","currentUser","appId","useState","setCurrentChatUser","setSession","ready","then","me","Session","Provider","value","cx","classNames","bind","styles","TurnMenu","minRaiseAmount","makeMove","raiseAmount","setRaiseAmount","handleRaiseRangeChange","useCallback","parseInt","target","className","size","onChange","type","min","max","onClick","_e","move","bet","imgSlugForCard","rank","color","A","J","Q","K","staticUrl","path","CardType","PropTypes","string","isRequired","PlayerType","shape","seatNumber","number","active","bool","isInTurn","cards","arrayOf","balance","moneyInPot","pot","smallBlind","bigBlind","currentPlayer","players","boardCards","seatStyles","0","dealerClass","chipsClass","seatClass","infoBoxPosition","1","2","3","4","5","PlayerChips","betAmount","classes","blackChipValue","blueChipValue","blackChipsCount","blueChipsCount","Array","from","length","src","alt","Seat","player","moveTimeLimit","countdownSeconds","setCountdownSeconds","firstCard","secondCard","tid","setTimeout","clearTimeout","countdownClasses","red","seatClasses","seat","card","raised","kcard","Table","game","find","slug","RoomPage","roomId","useParams","useSubscription","variables","getRoom","useMutation","_makeMove","xPlayerId","input","gameVersion","currentGame","version","LoginPage","onSuccessLogin","isAuthenticated","login","username","setUsername","password","setPassword","handleSubmit","a","preventDefault","signinUser","token","onSubmit","placeholder","ScrollToTop","pathname","useLocation","scrollTo","App","refetchCurrentUser","refetch","handleSuccessLogin","localStorage","setItem","basename","fallback","exact","render","routeProps","httpLink","createHttpLink","uri","process","authLink","setContext","obj","headers","getItem","authorization","httpAuthLink","concat","cable","ActionCable","createConsumer","cableAuthLink","ActionCableLink","connectionParams","link","ApolloLink","split","query","definitions","some","kind","operation","apolloClient","ApolloClient","cache","InMemoryCache","ReactDOM","client","document","getElementById","navigator","serviceWorker","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7f716841.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LoginPage_main__1-3jE\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 304;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { gql } from '@apollo/client';\n\nconst SIGNIN_USER_MUTATON = gql`\n  mutation($username: String!, $password: String!) {\n    signinUser(input: { username: $username, password: $password }) {\n      token\n    }\n  }\n`;\n\nconst GET_CURRENT_USER_QUERY = gql`\n  query GetCurrentUser {\n    currentUser {\n      id\n      name\n    }\n  }\n`;\n\nconst GET_ROOMS_QUERY = gql`\n  query GetRooms {\n    rooms {\n      id\n      name\n    }\n  }\n`;\n\nconst FULL_PLAYER_FRAGMENT = gql`\n  fragment FullPlayer on Player {\n    id\n    name\n    active\n    isInTurn\n    avatarUrl\n    balance\n    moneyInPot\n    position\n    seatNumber\n    cards {\n      rank\n      color\n    }\n  }\n`;\n\nconst GET_ROOM_SUBSCRIPTION = gql`\n  subscription($roomId: ID!) {\n    getRoom(roomId: $roomId) {\n      moveTimeLimit\n      currentGame {\n        version\n        currentPlayer {\n          ...FullPlayer\n        }\n        currentStage\n        isFinished\n        smallBlind\n        bigBlind\n        pot\n        boardCards {\n          rank\n          color\n        }\n        players {\n          ...FullPlayer\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n\n  ${FULL_PLAYER_FRAGMENT}\n`;\n\nconst MAKE_MOVE_MUTATION = gql`\n  mutation($input: MakeMoveInput!) {\n    makeMove(input: $input) {\n      success\n    }\n  }\n`;\n\nexport {\n  SIGNIN_USER_MUTATON,\n  GET_ROOMS_QUERY,\n  GET_CURRENT_USER_QUERY,\n  GET_ROOM_SUBSCRIPTION,\n  MAKE_MOVE_MUTATION,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { GET_ROOMS_QUERY } from '../../Graphql';\n\nconst LobbyPage = () => {\n  const { data: { rooms } = {}, loading, error } = useQuery(GET_ROOMS_QUERY);\n\n  if (error) {\n    throw new Error(error);\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {rooms.map((room) => {\n          return (\n            <li key={room.id}>\n              <Link to={`rooms/${room.id}`}> Room /{room.name}/ </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default LobbyPage;\n","import React, { useRef, createContext, useContext, useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Talk from 'talkjs';\n\nconst TalkContext = createContext();\n\nconst useTalkContext = () => {\n  return useContext(TalkContext);\n};\n\nconst UserType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string,\n  photoUrl: PropTypes.string,\n  welcomeMessage: PropTypes.string,\n});\n\nconst useChatbox = ({ chatId, users, conversationSettings: { photoUrl, subject } = {} }) => {\n  const { session, currentChatUser, loading } = useContext(TalkContext);\n  console.log(session, currentChatUser, loading);\n\n  return useMemo(() => {\n    if (loading) return null;\n\n    const chatUsers = users.map((u) => new Talk.User(u));\n\n    const conversation = session.getOrCreateConversation(chatId);\n    [currentChatUser, ...chatUsers].forEach((u) => conversation.setParticipant(u));\n\n    conversation.setAttributes({\n      photoUrl: photoUrl || 'https://demo.talkjs.com/img/11.jpg',\n      subject: subject || 'Beautiful Steel Preserve for rent!',\n    });\n\n    return session.createChatbox(conversation);\n  }, [users, loading, session, currentChatUser]);\n};\n\nconst Chatbox = React.memo(\n  ({ chatId, users, fixedPosition = 'bottomLeft' }) => {\n    const chatWrapperRef = useRef(null);\n    const inboxElem = useChatbox({ chatId, users });\n\n    useEffect(() => {\n      if (!inboxElem || !chatWrapperRef) return () => {};\n\n      inboxElem.mount(chatWrapperRef.current);\n\n      return () => {\n        inboxElem.destroy();\n      };\n    }, [inboxElem, chatWrapperRef.current]);\n\n    const style = {\n      bottomLeft: { position: 'fixed', bottom: '0', left: '0', height: '400px' },\n    }[fixedPosition];\n\n    return <div style={style} ref={chatWrapperRef} />;\n  },\n  (\n    { chatId: prevChatId, users: prevUsers, fixedPosition: prevFixedPosition },\n    { chatId, users, fixedPosition }\n  ) =>\n    chatId === prevChatId &&\n    fixedPosition === prevFixedPosition &&\n    JSON.stringify(users) === JSON.stringify(prevUsers)\n);\n\nChatbox.propTypes = {\n  chatId: PropTypes.string.isRequired,\n  users: PropTypes.arrayOf(UserType).isRequired,\n  fixedPosition: PropTypes.string,\n};\n\nconst TalkProvider = ({ children, currentUser, appId }) => {\n  const [currentChatUser, setCurrentChatUser] = useState(null);\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    if (!currentUser) return;\n\n    Talk.ready.then(() => {\n      const me = new Talk.User(currentUser);\n      setCurrentChatUser(me);\n      setSession(new Talk.Session({ appId, me }));\n    });\n  }, [currentUser, appId]);\n\n  return (\n    <TalkContext.Provider value={{ session, currentChatUser, loading: !session }}>\n      {children}\n    </TalkContext.Provider>\n  );\n};\n\nTalkProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  appId: PropTypes.string,\n  currentUser: UserType,\n};\n\nexport { Chatbox, TalkProvider, useTalkContext };\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport styles from './index.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst TurnMenu = ({ minRaiseAmount, makeMove }) => {\n  const [raiseAmount, setRaiseAmount] = useState(minRaiseAmount);\n  const handleRaiseRangeChange = useCallback((e) => {\n    setRaiseAmount(parseInt(e.target.value, 10));\n  }, []);\n\n  return (\n    <div className={cx('turn-menu')}>\n      <div className={cx('raise-amount-row')}>\n        <input value={raiseAmount} size=\"5\" onChange={handleRaiseRangeChange} />\n        <input\n          type=\"range\"\n          id=\"raise-range\"\n          name=\"raise-range\"\n          value={raiseAmount}\n          onChange={handleRaiseRangeChange}\n          min={minRaiseAmount}\n          max=\"1000\"\n        />\n      </div>\n      <div className={cx('buttons-row')}>\n        <button type=\"button\" className={cx('fold')} onClick={(_e) => makeMove({ move: 'fold' })}>\n          Fold\n        </button>\n        <button type=\"button\" className={cx('call')} onClick={(_e) => makeMove({ move: 'call' })}>\n          Call\n        </button>\n        <button\n          type=\"button\"\n          className={cx('raise')}\n          onClick={() => makeMove({ move: 'raise', bet: raiseAmount })}\n        >\n          Raise {raiseAmount}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nTurnMenu.propTypes = {\n  minRaiseAmount: PropTypes.number.isRequired,\n  makeMove: PropTypes.func.isRequired,\n};\n\nexport default TurnMenu;\n","const imgSlugForCard = ({ rank, color }) => {\n  if (rank === 'hidden') return 'back';\n\n  const rankToPath = {\n    A: '1',\n    J: 'jack',\n    Q: 'queen',\n    K: 'king',\n  };\n\n  return `${color}_${rankToPath[rank] || rank}`;\n};\n\nconst staticUrl = (path) => `/re-poker/${path}`;\n\nexport { imgSlugForCard, staticUrl };\n","import PropTypes from 'prop-types';\n\nconst CardType = {\n  color: PropTypes.string,\n  rank: PropTypes.string.isRequired,\n};\n\nconst PlayerType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  seatNumber: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  isInTurn: PropTypes.bool.isRequired,\n  cards: PropTypes.arrayOf(CardType),\n  position: PropTypes.string.isRequired,\n  balance: PropTypes.number.isRequired,\n  moneyInPot: PropTypes.number.isRequired,\n});\n\nconst GameType = PropTypes.shape({\n  pot: PropTypes.number.isRequired,\n  smallBlind: PropTypes.number.isRequired,\n  bigBlind: PropTypes.number.isRequired,\n  currentPlayer: PlayerType,\n  players: PropTypes.arrayOf(PlayerType),\n  boardCards: PropTypes.arrayOf(CardType),\n});\n\nexport { PlayerType, GameType, CardType };\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport { imgSlugForCard, staticUrl } from './utils';\nimport { PlayerType } from './proptypes';\n\nimport styles from './index.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst seatStyles = {\n  0: {\n    dealerClass: 'dealer-bottom-right',\n    chipsClass: 'chips-bottom-right',\n    seatClass: 'bottom-right',\n    infoBoxPosition: 'left',\n  },\n  1: {\n    dealerClass: 'dealer-middle-right',\n    chipsClass: 'chips-middle-right',\n    seatClass: 'middle-right',\n    infoBoxPosition: 'center',\n  },\n  2: {\n    dealerClass: 'dealer-top-right',\n    chipsClass: 'chips-top-right',\n    seatClass: 'top-right',\n    infoBoxPosition: 'right',\n  },\n  3: {\n    dealerClass: 'dealer-top-left',\n    chipsClass: 'chips-top-left',\n    seatClass: 'top-left',\n    infoBoxPosition: 'right',\n  },\n  4: {\n    dealerClass: 'dealer-middle-left',\n    chipsClass: 'chips-middle-left',\n    seatClass: 'middle-left',\n    infoBoxPosition: 'center',\n  },\n  5: {\n    dealerClass: 'dealer-bottom-left',\n    chipsClass: 'chips-bottom-left',\n    seatClass: 'bottom-left',\n    infoBoxPosition: 'left',\n  },\n};\n\nPlayerChips.propTypes = {\n  smallBlind: PropTypes.number.isRequired,\n  betAmount: PropTypes.number.isRequired,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nfunction PlayerChips({ smallBlind, betAmount, classes }) {\n  const blackChipValue = 10 * smallBlind;\n  const blueChipValue = smallBlind;\n\n  const blackChipsCount = parseInt(betAmount / blackChipValue, 10);\n  const blueChipsCount = parseInt(\n    (betAmount - blackChipsCount * blackChipValue) / blueChipValue,\n    10\n  );\n\n  return (\n    <div className={cx(['chips-container', ...classes])}>\n      <div className={cx('chip-column')}>\n        {!!blackChipsCount &&\n          Array.from({ length: blackChipsCount }, () => (\n            <img src={staticUrl('/chips/chip-black.png')} alt=\"blue-chip\" className={cx('chip')} />\n          ))}\n      </div>\n      <div className={cx('chip-column')}>\n        {!!blueChipsCount &&\n          Array.from({ length: blueChipsCount }, () => (\n            <img src={staticUrl('/chips/chip-blue.png')} alt=\"blue-chip\" className={cx('chip')} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nSeat.propTypes = {\n  player: PlayerType,\n  smallBlind: PropTypes.bool.isRequired,\n  moveTimeLimit: PropTypes.number.isRequired,\n};\nfunction Seat({ player, smallBlind, moveTimeLimit }) {\n  const [countdownSeconds, setCountdownSeconds] = useState(moveTimeLimit);\n  const firstCard = player.cards[0];\n  const secondCard = player.cards[1];\n\n  useEffect(() => {\n    if (!player.isInTurn) {\n      setCountdownSeconds(moveTimeLimit);\n      return () => {};\n    }\n\n    if (countdownSeconds <= 0) return () => {};\n\n    const tid = setTimeout(() => {\n      setCountdownSeconds(countdownSeconds - 0.5);\n    }, 500);\n\n    return () => {\n      clearTimeout(tid);\n    };\n  }, [player.isInTurn, countdownSeconds]);\n\n  const { seatClass, infoBoxPosition, dealerClass, chipsClass } = seatStyles[player.seatNumber];\n  const countdownClasses = cx({ 'time-bar': true, red: countdownSeconds < 3 });\n  const seatClasses = cx({ seat: true, [seatClass]: true, inactive: !player.active });\n\n  return (\n    <div key={player.id}>\n      {player.position === 'D' && (\n        <img\n          src={staticUrl('/chips/chip-dealer.png')}\n          alt=\"dealer-chip\"\n          className={cx('dealer-chip', dealerClass)}\n        />\n      )}\n      <PlayerChips classes={[chipsClass]} smallBlind={smallBlind} betAmount={player.moneyInPot} />\n      <div className={seatClasses}>\n        <div className={cx('avatar')}>\n          {' '}\n          <img src={staticUrl('avatars/business-man-avatar.png')} alt=\"business-man-avatar\" />{' '}\n        </div>\n        <div className={cx('info-box', infoBoxPosition)}>\n          <span>{player.name}</span>\n          <span>${player.balance}</span>\n          <div className={cx('cards-wrapper')}>\n            <img\n              src={staticUrl(`cards/${imgSlugForCard(firstCard)}.png`)}\n              alt={imgSlugForCard(firstCard)}\n              className={cx({ card: true, raised: !!firstCard })}\n            />\n            <img\n              src={staticUrl(`cards/${imgSlugForCard(secondCard)}.png`)}\n              alt={imgSlugForCard(firstCard)}\n              className={cx({ kcard: true, raised: !!secondCard })}\n            />\n          </div>\n          {player.isInTurn ? (\n            <progress\n              value={countdownSeconds * 2}\n              max={moveTimeLimit * 2}\n              className={countdownClasses}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Seat;\n","import React from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nimport { Chatbox } from '../TalkJS';\nimport TurnMenu from './TurnMenu';\nimport Seat from './Seat';\nimport { imgSlugForCard, staticUrl } from './utils';\nimport { GameType } from './proptypes';\nimport { GET_ROOM_SUBSCRIPTION, MAKE_MOVE_MUTATION } from '../../Graphql';\n\nimport styles from './index.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst RoomPage = () => {\n  const { roomId } = useParams();\n  const { data: { getRoom } = {}, loading, error } = useSubscription(GET_ROOM_SUBSCRIPTION, {\n    variables: { roomId },\n  });\n\n  const [_makeMove] = useMutation(MAKE_MOVE_MUTATION);\n\n  const makeMove = ({ move, bet, xPlayerId }) => {\n    _makeMove({\n      variables: { input: { gameVersion: getRoom.currentGame.version, move, bet, xPlayerId } },\n    });\n  };\n\n  // Hack for development\n  // TODO: Replace this with something more sophisticated\n  window.makeMove = makeMove;\n\n  if (error) {\n    throw new Error(error);\n  }\n\n  if (loading) {\n    console.log('Loading...');\n    return 'Loading...';\n  }\n\n  const { currentGame: game, moveTimeLimit, users } = getRoom;\n\n  return (\n    <div className={cx('room')}>\n      <Table game={game} moveTimeLimit={moveTimeLimit} />\n      <div className={cx('footer')}>\n        <Chatbox users={users} chatId={`poker-${roomId}`} fixedPosition=\"bottomLeft\" />\n        <div />\n        {game.currentPlayer?.isInTurn && <TurnMenu minRaiseAmount={200} makeMove={makeMove} />}\n      </div>\n    </div>\n  );\n};\n\nTable.propTypes = {\n  game: GameType,\n  moveTimeLimit: PropTypes.number.isRequired,\n};\n\nfunction Table({ game, moveTimeLimit }) {\n  console.log(game);\n\n  return (\n    <div className={cx('table')}>\n      <div>\n        <p>Pot: ${game.pot}</p>\n        <p>Small blind: ${game.smallBlind}</p>\n        <p>Big blind: ${game.bigBlind}</p>\n        <p>Player in turn: {game.players.find(({ isInTurn }) => isInTurn).id}</p>\n      </div>\n      {game.players.map((player) => {\n        if (game?.currentPlayer?.id === player.id) {\n          return (\n            <Seat\n              key={player.seatNumber}\n              player={game.currentPlayer}\n              smallBlind={game.smallBlind}\n            />\n          );\n        }\n        return (\n          <Seat\n            key={player.seatNumber}\n            player={player}\n            smallBlind={game.smallBlind}\n            moveTimeLimit={moveTimeLimit}\n          />\n        );\n      })}\n      <div className={cx('common-cards')}>\n        {game.boardCards.map(imgSlugForCard).map((slug) => (\n          <img className={cx('card')} src={staticUrl(`re-poker/cards/${slug}.png`)} alt={slug} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default RoomPage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router-dom';\n\nimport styles from './index.module.scss';\nimport { SIGNIN_USER_MUTATON } from '../../Graphql';\n\nconst cx = classNames.bind(styles);\n\nconst LoginPage = ({ onSuccessLogin, isAuthenticated }) => {\n  const [login] = useMutation(SIGNIN_USER_MUTATON);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { data: { signinUser: { token } = {} } = {}, error } = await login({\n      variables: { username, password },\n    });\n\n    if (error) {\n      console.error(error);\n      return;\n    }\n\n    onSuccessLogin(token);\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n\n  return (\n    <div className={cx('main')}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <button type=\"submit\"> Login </button>\n      </form>\n    </div>\n  );\n};\n\nLoginPage.propTypes = {\n  onSuccessLogin: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default LoginPage;\n","import React, { Suspense, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport classNames from 'classnames/bind';\n\nimport { useQuery } from '@apollo/client';\nimport LobbyPage from '../LobbyPage';\nimport RoomPage from '../RoomPage';\nimport LoginPage from '../LoginPage';\nimport { TalkProvider } from '../TalkJS';\n\nimport styles from './index.module.scss';\nimport { GET_CURRENT_USER_QUERY } from '../../Graphql';\n\nconst cx = classNames.bind(styles);\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nconst App = () => {\n  const { data: { currentUser } = {}, refetch: refetchCurrentUser } = useQuery(\n    GET_CURRENT_USER_QUERY\n  );\n  const isAuthenticated = !!currentUser;\n\n  const handleSuccessLogin = (token) => {\n    localStorage.setItem('token', token);\n    refetchCurrentUser();\n  };\n\n  return (\n    <TalkProvider currentUser={currentUser} appId=\"tp5ifGlr\">\n      <div className={cx('main')}>\n        <Router basename=\"/re-poker\">\n          <ScrollToTop />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route\n                exact\n                path=\"/login\"\n                render={(routeProps) => (\n                  <LoginPage\n                    onSuccessLogin={handleSuccessLogin}\n                    isAuthenticated={isAuthenticated}\n                    {...routeProps}\n                  />\n                )}\n              />\n              <Route\n                path=\"/\"\n                exact\n                render={(routeProps) =>\n                  isAuthenticated ? <LobbyPage {...routeProps} /> : <Redirect to=\"/login\" />\n                }\n              />\n              <Route\n                path=\"/rooms/:roomId\"\n                exact\n                render={(routeProps) =>\n                  isAuthenticated ? <RoomPage {...routeProps} /> : <Redirect to=\"/login\" />\n                }\n              />\n            </Switch>\n          </Suspense>\n        </Router>\n      </div>\n    </TalkProvider>\n  );\n};\n\nexport default App;\n","import ActionCable from 'actioncable';\nimport { ActionCableLink } from 'graphql-ruby-client';\nimport { ApolloLink, createHttpLink, ApolloClient, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({ uri: process.env.REACT_APP_GRAPHQL_URL });\n\nconst hasSubscriptionOperation = ({ query: { definitions } }) => {\n  return definitions.some(\n    ({ kind, operation }) => kind === 'OperationDefinition' && operation === 'subscription'\n  );\n};\n\nconst authLink = setContext((obj, { headers }) => {\n  const token = localStorage.getItem('token');\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst httpAuthLink = authLink.concat(httpLink);\n\n// TODO: Send the token dynamically\nconst token = localStorage.getItem('token');\n\nconst cable = ActionCable.createConsumer(process.env.REACT_APP_WS_URL);\nconst cableAuthLink = authLink.concat(new ActionCableLink({ cable, connectionParams: { token } }));\n\nconst link = ApolloLink.split(hasSubscriptionOperation, cableAuthLink, httpAuthLink);\n\nconst apolloClient = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\nexport default apolloClient;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport apolloClient from './apolloClient';\n\nimport './index.css';\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"RoomPage_room__31QOV\",\"table\":\"RoomPage_table__3G9fA\",\"dealer-chip\":\"RoomPage_dealer-chip__oUxPd\",\"dealer-top-right\":\"RoomPage_dealer-top-right__3x5oI\",\"dealer-top-left\":\"RoomPage_dealer-top-left__3d6of\",\"dealer-middle-right\":\"RoomPage_dealer-middle-right__1LDVE\",\"dealer-middle-left\":\"RoomPage_dealer-middle-left__2zM80\",\"dealer-bottom-right\":\"RoomPage_dealer-bottom-right__3NCZm\",\"dealer-bottom-left\":\"RoomPage_dealer-bottom-left__2GY36\",\"chips-container\":\"RoomPage_chips-container__ye1MQ\",\"chip-column\":\"RoomPage_chip-column__3QP8B\",\"chip\":\"RoomPage_chip__3tF38\",\"chips-top-right\":\"RoomPage_chips-top-right__7q9rL\",\"chips-top-left\":\"RoomPage_chips-top-left__1JlA2\",\"chips-middle-right\":\"RoomPage_chips-middle-right__36UZE\",\"chips-middle-left\":\"RoomPage_chips-middle-left__1NPiL\",\"chips-bottom-right\":\"RoomPage_chips-bottom-right__2eB1v\",\"chips-bottom-left\":\"RoomPage_chips-bottom-left__JIjfe\",\"common-cards\":\"RoomPage_common-cards__3MJJv\",\"card\":\"RoomPage_card__3z3yr\",\"seat\":\"RoomPage_seat__2nDCN\",\"inactive\":\"RoomPage_inactive__30FxZ\",\"info-box\":\"RoomPage_info-box__aeFyN\",\"cards-wrapper\":\"RoomPage_cards-wrapper__wU4bP\",\"top-right\":\"RoomPage_top-right__EJzfm\",\"top-left\":\"RoomPage_top-left__2lONB\",\"middle-right\":\"RoomPage_middle-right__2505e\",\"middle-left\":\"RoomPage_middle-left__1FsQh\",\"bottom-right\":\"RoomPage_bottom-right__3Fn77\",\"bottom-left\":\"RoomPage_bottom-left__1XbLa\",\"avatar\":\"RoomPage_avatar__3JHpS\",\"time-bar\":\"RoomPage_time-bar__2qpv8\",\"animate-stripes\":\"RoomPage_animate-stripes__3gSYV\",\"red\":\"RoomPage_red__kEhWf\",\"pulse\":\"RoomPage_pulse__1_oju\",\"raised\":\"RoomPage_raised__3VY_H\",\"center\":\"RoomPage_center__1DlZo\",\"left\":\"RoomPage_left__COpqe\",\"right\":\"RoomPage_right__3bBty\",\"footer\":\"RoomPage_footer__1RpJG\",\"turn-menu\":\"RoomPage_turn-menu__JX3sC\",\"raise-amount-row\":\"RoomPage_raise-amount-row__3kl_F\",\"buttons-row\":\"RoomPage_buttons-row__ZlY1o\"};"],"sourceRoot":""}