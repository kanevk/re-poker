{"version":3,"sources":["components/LoginPage/index.module.scss","../node_modules/graphql-ruby-client/dist/sync sync","Graphql.js","components/LobbyPage/index.js","components/RoomPage/TurnMenu.js","components/RoomPage/index.js","components/LoginPage/index.js","components/App/index.js","serviceWorker.js","index.js","components/RoomPage/index.module.scss"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","SIGNIN_USER_MUTATON","gql","GET_ROOMS_QUERY","FULL_PLAYER_FRAGMENT","GET_ROOM_SUBSCRIPTION","MAKE_MOVE_MUTATION","LobbyPage","useQuery","data","rooms","loading","error","map","room","key","to","name","cx","classNames","bind","styles","TurnMenu","minRaiseAmount","makeMove","useState","raiseAmount","setRaiseAmount","handleRaiseRangeChange","useCallback","parseInt","target","value","className","size","onChange","type","min","max","onClick","_e","move","bet","Table","game","moveTimeLimit","console","log","pot","smallBlind","bigBlind","players","find","isInTurn","player","currentPlayer","Seat","seatNumber","boardCards","imgSlugForCard","slug","src","alt","seatStyles","0","dealerClass","chipsClass","seatClass","infoBoxPosition","1","2","3","4","5","PlayerChips","betAmount","classes","blackChipValue","blueChipValue","blackChipsCount","blueChipsCount","Array","from","length","countdownSeconds","setCountdownSeconds","firstCard","cards","secondCard","useEffect","tid","setTimeout","clearTimeout","countdownClasses","red","seatClasses","seat","active","position","moneyInPot","balance","card","raised","kcard","rank","color","A","J","Q","K","RoomPage","roomId","useParams","useSubscription","variables","getRoom","useMutation","_makeMove","xPlayerId","input","gameVersion","currentGame","version","window","LoginPage","onSuccessLogin","isAuthenticated","login","username","setUsername","password","setPassword","handleSubmit","a","preventDefault","signinUser","token","onSubmit","placeholder","ScrollToTop","pathname","useLocation","scrollTo","App","localStorage","getItem","setIsAuthenticated","handleSuccessLogin","setItem","fallback","exact","path","render","routeProps","Boolean","location","hostname","match","httpLink","createHttpLink","uri","authLink","setContext","obj","headers","authorization","httpAuthLink","concat","cable","ActionCable","createConsumer","cableAuthLink","ActionCableLink","connectionParams","link","ApolloLink","split","query","definitions","some","kind","operation","apolloClient","ApolloClient","cache","InMemoryCache","ReactDOM","client","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b0bc3869.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LoginPage_main__1-3jE\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 294;","import { gql } from '@apollo/client';\n\nconst SIGNIN_USER_MUTATON = gql`\n  mutation($username: String!, $password: String!) {\n    signinUser(input: { username: $username, password: $password }) {\n      userId\n      token\n    }\n  }\n`;\n\nconst GET_ROOMS_QUERY = gql`\n  query GetRooms {\n    rooms {\n      id\n      name\n    }\n  }\n`;\n\nconst FULL_PLAYER_FRAGMENT = gql`\n  fragment FullPlayer on Player {\n    id\n    name\n    active\n    isInTurn\n    avatarUrl\n    balance\n    moneyInPot\n    position\n    seatNumber\n    cards {\n      rank\n      color\n    }\n  }\n`;\n\nconst GET_ROOM_SUBSCRIPTION = gql`\n  subscription($roomId: ID!) {\n    getRoom(roomId: $roomId) {\n      moveTimeLimit\n      currentGame {\n        version\n        currentPlayer {\n          ...FullPlayer\n        }\n        currentStage\n        isFinished\n        smallBlind\n        bigBlind\n        pot\n        boardCards {\n          rank\n          color\n        }\n        players {\n          ...FullPlayer\n        }\n      }\n    }\n  }\n\n  ${FULL_PLAYER_FRAGMENT}\n`;\n\nconst MAKE_MOVE_MUTATION = gql`\n  mutation($input: MakeMoveInput!) {\n    makeMove(input: $input) {\n      success\n    }\n  }\n`;\n\nexport { GET_ROOMS_QUERY, SIGNIN_USER_MUTATON, GET_ROOM_SUBSCRIPTION, MAKE_MOVE_MUTATION };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { GET_ROOMS_QUERY } from '../../Graphql';\n\nconst LobbyPage = () => {\n  const { data: { rooms } = {}, loading, error } = useQuery(GET_ROOMS_QUERY);\n\n  if (error) {\n    throw new Error(error);\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {rooms.map((room) => {\n          return (\n            <li key={room.id}>\n              <Link to={`rooms/${room.id}`}> Room /{room.name}/ </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default LobbyPage;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport styles from './index.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst TurnMenu = ({ minRaiseAmount, makeMove }) => {\n  const [raiseAmount, setRaiseAmount] = useState(minRaiseAmount);\n  const handleRaiseRangeChange = useCallback((e) => {\n    setRaiseAmount(parseInt(e.target.value, 10));\n  }, []);\n\n  return (\n    <div className={cx('turn-menu')}>\n      <div className={cx('raise-amount-row')}>\n        <input value={raiseAmount} size=\"5\" onChange={handleRaiseRangeChange} />\n        <input\n          type=\"range\"\n          id=\"raise-range\"\n          name=\"raise-range\"\n          value={raiseAmount}\n          onChange={handleRaiseRangeChange}\n          min={minRaiseAmount}\n          max=\"1000\"\n        />\n      </div>\n      <div className={cx('buttons-row')}>\n        <button type=\"button\" className={cx('fold')} onClick={(_e) => makeMove({ move: 'fold' })}>\n          Fold\n        </button>\n        <button type=\"button\" className={cx('call')} onClick={(_e) => makeMove({ move: 'call' })}>\n          Call\n        </button>\n        <button\n          type=\"button\"\n          className={cx('raise')}\n          onClick={() => makeMove({ move: 'raise', bet: raiseAmount })}\n        >\n          Raise {raiseAmount}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nTurnMenu.propTypes = {\n  minRaiseAmount: PropTypes.number.isRequired,\n  makeMove: PropTypes.func.isRequired,\n};\n\nexport default TurnMenu;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport classNames from 'classnames/bind';\nimport { useParams } from 'react-router-dom';\n\nimport TurnMenu from './TurnMenu';\nimport { GET_ROOM_SUBSCRIPTION, MAKE_MOVE_MUTATION } from '../../Graphql';\nimport styles from './index.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst RoomPage = () => {\n  const { roomId } = useParams();\n  const { data: { getRoom } = {}, loading, error } = useSubscription(GET_ROOM_SUBSCRIPTION, {\n    variables: { roomId },\n  });\n\n  const [_makeMove] = useMutation(MAKE_MOVE_MUTATION);\n\n  const makeMove = ({ move, bet, xPlayerId }) => {\n    _makeMove({\n      variables: { input: { gameVersion: getRoom.currentGame.version, move, bet, xPlayerId } },\n    });\n  };\n\n  // Hack for development\n  // TODO: Replace this with something more sophisticated\n  window.makeMove = makeMove;\n\n  if (error) {\n    throw new Error(error);\n  }\n\n  if (loading) {\n    console.log('Loading...');\n    return 'Loading...';\n  }\n\n  const { currentGame: game, moveTimeLimit } = getRoom;\n\n  return (\n    <div className={cx('room')}>\n      <Table game={game} moveTimeLimit={moveTimeLimit} />\n      <div className={cx('footer')}>\n        <div />\n        {game.currentPlayer?.isInTurn && <TurnMenu minRaiseAmount={200} makeMove={makeMove} />}\n      </div>\n    </div>\n  );\n};\n\nconst CardType = {\n  color: PropTypes.string,\n  rank: PropTypes.string.isRequired,\n};\n\nconst PlayerType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  seatNumber: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  isInTurn: PropTypes.bool.isRequired,\n  cards: PropTypes.arrayOf(CardType),\n  position: PropTypes.string.isRequired,\n  balance: PropTypes.number.isRequired,\n  moneyInPot: PropTypes.number.isRequired,\n});\n\nTable.propTypes = {\n  game: PropTypes.shape({\n    pot: PropTypes.number.isRequired,\n    smallBlind: PropTypes.number.isRequired,\n    bigBlind: PropTypes.number.isRequired,\n    currentPlayer: PlayerType,\n    players: PropTypes.arrayOf(PlayerType),\n    boardCards: PropTypes.arrayOf(CardType),\n  }),\n  moveTimeLimit: PropTypes.number.isRequired,\n};\n\nfunction Table({ game, moveTimeLimit }) {\n  console.log(game);\n\n  return (\n    <div className={cx('table')}>\n      <div>\n        <p>Pot: ${game.pot}</p>\n        <p>Small blind: ${game.smallBlind}</p>\n        <p>Big blind: ${game.bigBlind}</p>\n        <p>Player in turn: {game.players.find(({ isInTurn }) => isInTurn).id}</p>\n      </div>\n      {game.players.map((player) => {\n        if (game?.currentPlayer?.id === player.id) {\n          return (\n            <Seat\n              key={player.seatNumber}\n              player={game.currentPlayer}\n              smallBlind={game.smallBlind}\n            />\n          );\n        }\n        return (\n          <Seat\n            key={player.seatNumber}\n            player={player}\n            smallBlind={game.smallBlind}\n            moveTimeLimit={moveTimeLimit}\n          />\n        );\n      })}\n      <div className={cx('common-cards')}>\n        {game.boardCards.map(imgSlugForCard).map((slug) => (\n          <img className={cx('card')} src={`/cards/${slug}.png`} alt={slug} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst seatStyles = {\n  0: {\n    dealerClass: 'dealer-bottom-right',\n    chipsClass: 'chips-bottom-right',\n    seatClass: 'bottom-right',\n    infoBoxPosition: 'left',\n  },\n  1: {\n    dealerClass: 'dealer-middle-right',\n    chipsClass: 'chips-middle-right',\n    seatClass: 'middle-right',\n    infoBoxPosition: 'center',\n  },\n  2: {\n    dealerClass: 'dealer-top-right',\n    chipsClass: 'chips-top-right',\n    seatClass: 'top-right',\n    infoBoxPosition: 'right',\n  },\n  3: {\n    dealerClass: 'dealer-top-left',\n    chipsClass: 'chips-top-left',\n    seatClass: 'top-left',\n    infoBoxPosition: 'right',\n  },\n  4: {\n    dealerClass: 'dealer-middle-left',\n    chipsClass: 'chips-middle-left',\n    seatClass: 'middle-left',\n    infoBoxPosition: 'center',\n  },\n  5: {\n    dealerClass: 'dealer-bottom-left',\n    chipsClass: 'chips-bottom-left',\n    seatClass: 'bottom-left',\n    infoBoxPosition: 'left',\n  },\n};\n\nPlayerChips.propTypes = {\n  smallBlind: PropTypes.number.isRequired,\n  betAmount: PropTypes.number.isRequired,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nfunction PlayerChips({ smallBlind, betAmount, classes }) {\n  const blackChipValue = 10 * smallBlind;\n  const blueChipValue = smallBlind;\n\n  const blackChipsCount = parseInt(betAmount / blackChipValue, 10);\n  const blueChipsCount = parseInt(\n    (betAmount - blackChipsCount * blackChipValue) / blueChipValue,\n    10\n  );\n\n  return (\n    <div className={cx(['chips-container', ...classes])}>\n      <div className={cx('chip-column')}>\n        {!!blackChipsCount &&\n          Array.from({ length: blackChipsCount }, () => (\n            <img src=\"/chips/chip-black.png\" alt=\"blue-chip\" className={cx('chip')} />\n          ))}\n      </div>\n      <div className={cx('chip-column')}>\n        {!!blueChipsCount &&\n          Array.from({ length: blueChipsCount }, () => (\n            <img src=\"/chips/chip-blue.png\" alt=\"blue-chip\" className={cx('chip')} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nSeat.propTypes = {\n  player: PlayerType,\n  smallBlind: PropTypes.bool.isRequired,\n  moveTimeLimit: PropTypes.number.isRequired,\n};\nfunction Seat({ player, smallBlind, moveTimeLimit }) {\n  const [countdownSeconds, setCountdownSeconds] = useState(moveTimeLimit);\n  const firstCard = player.cards[0];\n  const secondCard = player.cards[1];\n\n  useEffect(() => {\n    if (!player.isInTurn) {\n      setCountdownSeconds(moveTimeLimit);\n      return () => {};\n    }\n\n    if (countdownSeconds <= 0) return () => {};\n\n    const tid = setTimeout(() => {\n      setCountdownSeconds(countdownSeconds - 0.5);\n    }, 500);\n\n    return () => {\n      clearTimeout(tid);\n    };\n  }, [player.isInTurn, countdownSeconds]);\n\n  const { seatClass, infoBoxPosition, dealerClass, chipsClass } = seatStyles[player.seatNumber];\n  const countdownClasses = cx({ 'time-bar': true, red: countdownSeconds < 3 });\n  const seatClasses = cx({ seat: true, [seatClass]: true, inactive: !player.active });\n\n  return (\n    <div key={player.id}>\n      {player.position === 'D' && (\n        <img\n          src=\"/chips/chip-dealer.png\"\n          alt=\"dealer-chip\"\n          className={cx('dealer-chip', dealerClass)}\n        />\n      )}\n      <PlayerChips classes={[chipsClass]} smallBlind={smallBlind} betAmount={player.moneyInPot} />\n      <div className={seatClasses}>\n        <div className={cx('avatar')}>\n          {' '}\n          <img src=\"/avatars/business-man-avatar.png\" alt=\"business-man-avatar\" />{' '}\n        </div>\n        <div className={cx('info-box', infoBoxPosition)}>\n          <span>{player.name}</span>\n          <span>${player.balance}</span>\n          <div className={cx('cards-wrapper')}>\n            <img\n              src={`/cards/${imgSlugForCard(firstCard)}.png`}\n              alt={imgSlugForCard(firstCard)}\n              className={cx({ card: true, raised: !!firstCard })}\n            />\n            <img\n              src={`/cards/${imgSlugForCard(secondCard)}.png`}\n              alt={imgSlugForCard(firstCard)}\n              className={cx({ kcard: true, raised: !!secondCard })}\n            />\n          </div>\n          {player.isInTurn ? (\n            <progress\n              value={countdownSeconds * 2}\n              max={moveTimeLimit * 2}\n              className={countdownClasses}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst imgSlugForCard = ({ rank, color }) => {\n  if (rank === 'hidden') return 'back';\n\n  const rankToPath = {\n    A: '1',\n    J: 'jack',\n    Q: 'queen',\n    K: 'king',\n  };\n\n  return `${color}_${rankToPath[rank] || rank}`;\n};\n\nexport default RoomPage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router-dom';\n\nimport styles from './index.module.scss';\nimport { SIGNIN_USER_MUTATON } from '../../Graphql';\n\nconst cx = classNames.bind(styles);\n\nconst LoginPage = ({ onSuccessLogin, isAuthenticated }) => {\n  const [login] = useMutation(SIGNIN_USER_MUTATON);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { data: { signinUser: { token } = {} } = {}, error } = await login({\n      variables: { username, password },\n    });\n\n    if (error) {\n      console.error(error);\n      return;\n    }\n\n    onSuccessLogin(token);\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n\n  return (\n    <div className={cx('main')}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <button type=\"submit\"> Login </button>\n      </form>\n    </div>\n  );\n};\n\nLoginPage.propTypes = {\n  onSuccessLogin: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default LoginPage;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport classNames from 'classnames/bind';\n\nimport LobbyPage from '../LobbyPage';\nimport RoomPage from '../RoomPage';\nimport LoginPage from '../LoginPage';\n\nimport styles from './index.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nconst App = () => {\n  // TODO: handle outdated tokens\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n\n  const handleSuccessLogin = (token) => {\n    localStorage.setItem('token', token);\n    setIsAuthenticated(true);\n  };\n\n  return (\n    <div className={cx('main')}>\n      <Router>\n        <ScrollToTop />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(routeProps) => (\n                <LoginPage\n                  onSuccessLogin={handleSuccessLogin}\n                  isAuthenticated={isAuthenticated}\n                  {...routeProps}\n                />\n              )}\n            />\n            <Route\n              path=\"/\"\n              exact\n              render={(routeProps) =>\n                isAuthenticated ? <LobbyPage {...routeProps} /> : <Redirect to=\"/login\" />\n              }\n            />\n            <Route\n              path=\"/rooms/:roomId\"\n              exact\n              render={(routeProps) =>\n                isAuthenticated ? <RoomPage {...routeProps} /> : <Redirect to=\"/login\" />\n              }\n            />\n          </Switch>\n        </Suspense>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ActionCable from 'actioncable';\nimport { ActionCableLink } from 'graphql-ruby-client';\nimport {\n  ApolloLink,\n  ApolloProvider,\n  createHttpLink,\n  ApolloClient,\n  InMemoryCache,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport App from './components/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3000/graphql',\n});\n\nconst hasSubscriptionOperation = ({ query: { definitions } }) => {\n  return definitions.some(\n    ({ kind, operation }) => kind === 'OperationDefinition' && operation === 'subscription'\n  );\n};\n\nconst authLink = setContext((obj, { headers }) => {\n  const token = localStorage.getItem('token');\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst httpAuthLink = authLink.concat(httpLink);\n\n// TODO: Send the token dynamically\nconst token = localStorage.getItem('token');\n\nconst cable = ActionCable.createConsumer('ws://localhost:3000/cable');\nconst cableAuthLink = authLink.concat(new ActionCableLink({ cable, connectionParams: { token } }));\n\nconst link = ApolloLink.split(hasSubscriptionOperation, cableAuthLink, httpAuthLink);\n\n// Initialize the client\nconst apolloClient = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"RoomPage_room__31QOV\",\"table\":\"RoomPage_table__3G9fA\",\"dealer-chip\":\"RoomPage_dealer-chip__oUxPd\",\"dealer-top-right\":\"RoomPage_dealer-top-right__3x5oI\",\"dealer-top-left\":\"RoomPage_dealer-top-left__3d6of\",\"dealer-middle-right\":\"RoomPage_dealer-middle-right__1LDVE\",\"dealer-middle-left\":\"RoomPage_dealer-middle-left__2zM80\",\"dealer-bottom-right\":\"RoomPage_dealer-bottom-right__3NCZm\",\"dealer-bottom-left\":\"RoomPage_dealer-bottom-left__2GY36\",\"chips-container\":\"RoomPage_chips-container__ye1MQ\",\"chip-column\":\"RoomPage_chip-column__3QP8B\",\"chip\":\"RoomPage_chip__3tF38\",\"chips-top-right\":\"RoomPage_chips-top-right__7q9rL\",\"chips-top-left\":\"RoomPage_chips-top-left__1JlA2\",\"chips-middle-right\":\"RoomPage_chips-middle-right__36UZE\",\"chips-middle-left\":\"RoomPage_chips-middle-left__1NPiL\",\"chips-bottom-right\":\"RoomPage_chips-bottom-right__2eB1v\",\"chips-bottom-left\":\"RoomPage_chips-bottom-left__JIjfe\",\"common-cards\":\"RoomPage_common-cards__3MJJv\",\"card\":\"RoomPage_card__3z3yr\",\"seat\":\"RoomPage_seat__2nDCN\",\"inactive\":\"RoomPage_inactive__30FxZ\",\"info-box\":\"RoomPage_info-box__aeFyN\",\"cards-wrapper\":\"RoomPage_cards-wrapper__wU4bP\",\"top-right\":\"RoomPage_top-right__EJzfm\",\"top-left\":\"RoomPage_top-left__2lONB\",\"middle-right\":\"RoomPage_middle-right__2505e\",\"middle-left\":\"RoomPage_middle-left__1FsQh\",\"bottom-right\":\"RoomPage_bottom-right__3Fn77\",\"bottom-left\":\"RoomPage_bottom-left__1XbLa\",\"avatar\":\"RoomPage_avatar__3JHpS\",\"time-bar\":\"RoomPage_time-bar__2qpv8\",\"animate-stripes\":\"RoomPage_animate-stripes__3gSYV\",\"red\":\"RoomPage_red__kEhWf\",\"pulse\":\"RoomPage_pulse__1_oju\",\"raised\":\"RoomPage_raised__3VY_H\",\"center\":\"RoomPage_center__1DlZo\",\"left\":\"RoomPage_left__COpqe\",\"right\":\"RoomPage_right__3bBty\",\"footer\":\"RoomPage_footer__1RpJG\",\"turn-menu\":\"RoomPage_turn-menu__JX3sC\",\"raise-amount-row\":\"RoomPage_raise-amount-row__3kl_F\",\"buttons-row\":\"RoomPage_buttons-row__ZlY1o\"};"],"sourceRoot":""}